{"version":3,"sources":["images/logo2.png","images/logo.png","components/Navbar.js","components/ContextApi.js","components/sortingMethods.js","components/canvasOptions.js","components/drawCanvans.js","components/Canvas.js","components/Introduction.js","App.js","index.js"],"names":["Navbar","className","src","logo2","alt","href","MyContext","createContext","ContextApi","props","useState","sortMethod","setSortMethod","numOfBars","setNumOfBars","speed","setSpeed","sortingList","setSortingList","barObjectInfor","setBarObjectInfor","object","rerender","setRerender","Provider","value","children","mergeSort","array","width","a","length","middleIndex","Math","floor","leftArr","slice","rightArr","sort","sortedList","start","x","height","num","shift","color","sleep","push","quickSort","index","random","first","pivot","i","bubbleSort","temp","pos","j","Promise","resolve","reject","setTimeout","CanvasOptions","useContext","isSorting","setIsSorting","isSorted","setIsSorted","resetHandler","htmlFor","onChange","e","target","name","id","defaultValue","type","min","max","onClick","Paddle","canvas","ctx","this","y","fillStyle","fillRect","Bar","lineWidth","strokeStyle","strokeRect","Canvas","canvasRef","useRef","window","innerWidth","canvasWidth","setCanvasWidth","useEffect","current","getContext","barsToSort","barObject","startY","maxHeight","nextX","paddle","initYPosition","diff","bar","init","animate","clearRect","draw","requestAnimationFrame","addEventListener","style","styles","div","ref","display","justifyContent","marginTop","background","border","Introduction","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ee56ec0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo2.439addb2.png\";","export default __webpack_public_path__ + \"static/media/logo.050b2c51.png\";","import React from 'react'\r\nimport logo from '../images/logo.png'\r\nimport logo2 from '../images/logo2.png'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav className='navbar'>\r\n            <div >\r\n                <img className='logo' src={logo2} alt=\"Amos wings logo\" />\r\n                <p><span>AMOS</span> MAKUPE</p>\r\n            </div>\r\n            <ul className='links'>\r\n                <li><a href=\"#\">Portfolio</a></li>\r\n                <li><a href=\"#\">Github</a></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\n","import React, { createContext, useState} from 'react'\r\n\r\nexport const MyContext= createContext()\r\n\r\nexport default function ContextApi(props) {\r\n    const [sortMethod,setSortMethod] = useState('MergeSort');\r\n    const [numOfBars,setNumOfBars] = useState(50);\r\n    const [speed,setSpeed] = useState(50);\r\n    const [sortingList,setSortingList] = useState([]);\r\n    const [barObjectInfor,setBarObjectInfor] = useState(null);\r\n    const [rerender,setRerender] = useState(false);\r\n    \r\n    const object = {\r\n        sortMethod:sortMethod,\r\n        numOfBars:numOfBars,\r\n        speed:speed,\r\n        sortingList:sortingList,\r\n        barObjectInfor:barObjectInfor,\r\n        rerender:rerender,\r\n        setRerender:setRerender,\r\n        setSortMethod:setSortMethod,\r\n        setNumOfBars:setNumOfBars,\r\n        setSpeed:setSpeed,\r\n        setSortingList:setSortingList,\r\n        setBarObjectInfor:setBarObjectInfor\r\n    }\r\n\r\n    return (\r\n        <MyContext.Provider value={object}>\r\n             {props.children}           \r\n        </MyContext.Provider>\r\n    )\r\n}\r\n","\r\n\r\n//mergeSort first sorting algorithm\r\nexport async function mergeSort(array,width,speed){\r\n    if(array.length <=1)return array\r\n    const middleIndex=Math.floor(array.length/2)\r\n    const leftArr = array.slice(0,middleIndex)\r\n    const rightArr = array.slice(middleIndex)\r\n\r\n    return await sort(await mergeSort(leftArr,width,speed),await mergeSort(rightArr,width,speed),width,speed)\r\n}\r\n//mergeSort helper functions \r\nasync function sort(leftArr,rightArr,width,speed){\r\n    const sortedList = []\r\n    let start = leftArr[0].x\r\n    while(leftArr.length>0 && rightArr.length>0){\r\n        if(leftArr[0].height<rightArr[0].height){\r\n            const num = leftArr.shift()\r\n            num.x=start\r\n            start+=width\r\n            num.color='green'\r\n            rightArr[0].color='red'\r\n            await sleep(speed)\r\n            num.color='navy'\r\n            rightArr[0].color='navy'\r\n            sortedList.push(num)\r\n        }else{\r\n            const num = rightArr.shift()\r\n            num.x=start\r\n            start+=width\r\n            num.color='red'\r\n            leftArr[0].color='green'\r\n            await sleep(speed)\r\n            num.color='navy'\r\n            leftArr[0].color='navy'\r\n            sortedList.push(num)\r\n        }\r\n    }\r\n    while(leftArr.length>0){\r\n        const num = leftArr.shift()\r\n        num.x=start\r\n        start+=width\r\n        num.color='green'\r\n        await sleep(speed)\r\n        num.color='navy'\r\n        sortedList.push(num)\r\n    }\r\n    while(rightArr.length>0){\r\n        const num = rightArr.shift()\r\n        num.x=start\r\n        start+=width\r\n        num.color='green'\r\n        await sleep(speed)\r\n        num.color='navy'\r\n        sortedList.push(num)\r\n    }\r\n    return sortedList\r\n}\r\n\r\n\r\n//Quicksort second sorting algorithm\r\nexport async function quickSort(array,width,speed){\r\n    if(array.length<=1) return array;\r\n\r\n    const index = Math.floor(Math.random()*array.length)\r\n\r\n    const first = array[index]\r\n    array[index]=array[array.length-1]\r\n    array[index].x=first.x\r\n    \r\n    // array[index].y=array[array.length-1].y\r\n    \r\n    array[array.length-1]=first\r\n    array[array.length-1].x=array[index].x\r\n    \r\n    const pivot = array[array.length-1]\r\n    const leftArr = []\r\n    const rightArr = []\r\n\r\n\r\n    let start = array[0].x\r\n    pivot.color='purple'\r\n    for(let i=0;i<array.length-1;i++){\r\n        if(array[i].height < pivot.height){\r\n            array[i].color='green'\r\n            array[i].x=start\r\n            start+=width\r\n            await sleep(speed)\r\n            array[i].color='royalBlue'\r\n            leftArr.push(array[i])\r\n        }\r\n    }\r\n    if(leftArr.length>0)leftArr[leftArr.length-1].color='navy'\r\n    pivot.x=start\r\n    start+=width\r\n    \r\n    for(let i=0;i<array.length-1;i++){\r\n        if(array[i].height >= pivot.height){\r\n            array[i].color='red'\r\n            array[i].x=start\r\n            start+=width\r\n            \r\n            await sleep(speed)\r\n            array[i].color='royalBlue'\r\n            rightArr.push(array[i])\r\n        }\r\n    }\r\n    if(rightArr.length>0)rightArr[rightArr.length-1].color='navy'\r\n    pivot.color='navy'\r\n    return [...await quickSort(leftArr,width),pivot,...await quickSort(rightArr,width)]\r\n}\r\n\r\n\r\n\r\n\r\n//bubble sort third algorithm\r\nexport async function bubbleSort(array,speed){\r\n    for(let i=array.length-1;i>0;i--){\r\n        let temp;\r\n        let pos;\r\n        for(let j=0;j<i;j++){\r\n            array[j].color='green'\r\n            if(array[j].height>array[j+1].height){\r\n                array[j+1].color='red'\r\n                temp=array[j+1]\r\n                pos = array[j+1].x\r\n                array[j+1].x= array[j].x\r\n                array[j].x=pos\r\n                array[j+1]=array[j];\r\n                array[j]=temp\r\n                await sleep(speed)\r\n                array[j+1].color='navy'\r\n            }\r\n            array[j].color='royalBlue'\r\n            // array[i].color='navy'\r\n        }\r\n    }\r\n    return array\r\n}\r\n\r\nasync function sleep(speed=50){\r\n    return new Promise((resolve,reject)=>setTimeout(()=>resolve('Done'),speed))\r\n}\r\n// console.log(bubbleSort(nums))","import React, {useContext, useState} from 'react'\r\nimport {MyContext} from './ContextApi'\r\nimport { mergeSort, quickSort, bubbleSort } from './sortingMethods'\r\n\r\n\r\nfunction CanvasOptions({}) {\r\n\r\n    const {rerender,barObjectInfor,sortMethod,speed,sortingList,setSortMethod, setSpeed, setNumOfBars,setRerender} = useContext(MyContext)\r\n    const [isSorting,setIsSorting]= useState(false);\r\n    const [isSorted,setIsSorted]= useState(false);\r\n\r\n\r\n    function speedHandler(e){\r\n        setSpeed(e.target.value)\r\n    }\r\n\r\n    function sortHandler(e){\r\n        setSortMethod(e.target.value)\r\n    }\r\n\r\n    function numOfHandler(e){\r\n        let value=e.target.value;\r\n\r\n        if(value<20)return setNumOfBars(20)\r\n        if(value>100)return setNumOfBars(100)\r\n\r\n        return setNumOfBars(value)\r\n    }\r\n    async function playHandler(){\r\n        if(isSorting) return\r\n        if(isSorted) return resetHandler() \r\n        switch(sortMethod){\r\n            case 'MergeSort':\r\n                setIsSorting(true)\r\n                await mergeSort(sortingList,barObjectInfor.width,speed)\r\n                setIsSorting(false)\r\n                setIsSorted(true)\r\n                break;\r\n            case 'QuickSort':\r\n                setIsSorting(true)\r\n                await quickSort(sortingList,barObjectInfor.width,speed)\r\n                setIsSorting(false)\r\n                setIsSorted(true)\r\n                break;\r\n                default :\r\n                setIsSorting(true)\r\n                await bubbleSort(sortingList,speed)\r\n                setIsSorting(false)\r\n                setIsSorted(true)\r\n        }\r\n    }\r\n    function resetHandler(){\r\n        setIsSorting(false)\r\n        setIsSorted(false)\r\n        setRerender(!rerender)\r\n    }\r\n    return (\r\n        <div className='config-area'>\r\n           <label htmlFor=\"speedMeter\" className='speed'>\r\n               speed :\r\n               <select onChange={speedHandler} name=\"speedMeter\" id=\"speed\" defaultValue={50}>\r\n                   <option value={50}>normal</option>\r\n                   <option value={20}>fast</option>\r\n                   <option value={80}>slow</option>\r\n               </select>\r\n           </label>\r\n           <label htmlFor=\"numOfItems\" className='number-of-bars'>\r\n               number of bars\r\n               <input onChange={numOfHandler} type='number'  min={20} max={100} defaultValue={30}/>\r\n           </label>\r\n           <button onClick={playHandler} className='playBtn'><i className=\"fas fa-play-circle\"></i></button>\r\n           <button onClick={resetHandler} className='resetBtn'><i className=\"fas fa-redo-alt\"></i></button>\r\n           <label htmlFor=\"algorithm\" className='pick-algorithm'>\r\n               sorting Algrithm\r\n               <select onChange={sortHandler} name=\"algorithm\" defaultValue='MergeSort'>\r\n                   <option value=\"MergeSort\">merge sort</option>\r\n                   <option value=\"QuickSort\">quick sort</option>\r\n                   <option value=\"BubbleSort\">bubble sort</option>\r\n               </select>\r\n           </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CanvasOptions\r\n","export class Paddle {\r\n    constructor(canvas,ctx){\r\n        this.y= canvas.height-25\r\n        this.x= 25\r\n        this.width=canvas.width-50\r\n        this.ctx =ctx\r\n    }\r\n    draw(){\r\n        this.ctx.fillStyle='#B5F04F'\r\n        this.ctx.fillRect(this.x,this.y,this.width,5)\r\n    }\r\n}\r\n\r\nexport class Bar {\r\n    constructor(ctx,x,y,width,height){\r\n        this.ctx=ctx\r\n        this.x=x\r\n        this.y=y\r\n        this.width=width-5\r\n        this.height=height\r\n        this.color='royalBlue'\r\n    }\r\n    draw(){\r\n        this.ctx.fillStyle=this.color\r\n        this.ctx.fillRect(this.x,this.y,this.width,this.height)\r\n        this.ctx.lineWidth=1.8\r\n        this.ctx.strokeStyle='white'\r\n        this.ctx.strokeRect(this.x,this.y,this.width,this.height)\r\n    }\r\n}\r\n\r\n","import React, { useEffect, useRef, useContext, useState } from 'react'\r\nimport CanvasOptions from './canvasOptions'\r\nimport { Paddle, Bar } from './drawCanvans'\r\nimport { MyContext } from './ContextApi'\r\nimport { mergeSort, quickSort, bubbleSort } from './sortingMethods'\r\n\r\nexport default function Canvas() {\r\n    const canvasRef = useRef(null)\r\n    const {rerender, numOfBars, setSortingList,setBarObjectInfor} = useContext(MyContext)\r\n    // console.log(objects)\r\n    const [canvasWidth,setCanvasWidth]=useState(window.innerWidth-50)\r\n \r\n    useEffect(()=>{\r\n        const canvas = canvasRef.current;\r\n        canvas.width=canvasWidth\r\n        const ctx = canvas.getContext('2d')\r\n        const barsToSort = [] \r\n        const barObject = {\r\n            width:Math.floor((canvas.width-50)/numOfBars),\r\n            startY:50,\r\n            maxHeight:canvas.height-27-50,\r\n            nextX:27\r\n        }        \r\n\r\n        const paddle = new Paddle(canvas,ctx)\r\n        \r\n        function init(){\r\n            for(let i=0;i<numOfBars;i++){\r\n                const height = Math.floor(Math.random()*barObject.maxHeight+1);\r\n                const bar = new Bar(ctx,barObject.nextX,initYPosition(height),barObject.width,height)\r\n                barsToSort.push(bar)\r\n                barObject.nextX+=barObject.width\r\n            }\r\n            setSortingList(barsToSort)\r\n            setBarObjectInfor(barObject)\r\n            // mergeSort(barsToSort,barObject.width)\r\n            // quickSort(barsToSort,barObject.width)\r\n            //  console.log(bubbleSort(barsToSort))\r\n        }\r\n\r\n        function animate(){\r\n            ctx.clearRect(0,0,canvas.width,canvas.height)\r\n            paddle.draw()\r\n            for(let bar of barsToSort){\r\n                bar.draw()\r\n            }\r\n            requestAnimationFrame(animate)\r\n        }\r\n        \r\n        function initYPosition(height){\r\n            const diff = barObject.maxHeight-height;\r\n            const finalPosition = barObject.startY+diff;\r\n            return finalPosition\r\n        }\r\n        init()\r\n        animate()\r\n\r\n    },[numOfBars,rerender,canvasWidth])\r\n\r\n    window.addEventListener('resize',()=>{\r\n        setCanvasWidth(window.innerWidth-50)\r\n    })\r\n    return (\r\n        <div className='canvas-area'>\r\n            <CanvasOptions/>\r\n            <div style={styles.div}>\r\n                <canvas  \r\n                width={canvasWidth} \r\n                height={600} \r\n                ref={canvasRef}\r\n                style={styles.canvas}\r\n                >\r\n                </canvas>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst styles = {\r\n    div:{\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        height:'fit-Content',\r\n        width:'100%',\r\n        marginTop:'100px'\r\n    },\r\n    canvas:{\r\n        background:'#2B1C5C',\r\n        border:'3px solid navy'\r\n    }\r\n}","import React from 'react'\r\n\r\nfunction Introduction() {\r\n    return (\r\n        <div className='intro-page'>\r\n            <section className='section-one'>\r\n                <h1>Sorting Algorithm<br/>Visualization</h1>\r\n            </section>\r\n            <section className='section-two'>\r\n                <main>\r\n                        \r\n                    <h1>What are sorting algothrims ?</h1>\r\n                    <div>\r\n                        Sorting algothrims are just steps that computers take in order to sort a list of items. It could sort it in ascending or descending order depending on what the programmer wants\r\n                    </div>\r\n                    <div>\r\n                        There are about 15 sorting algrorithms but there are mainly 6 of them that are used in the real world application. I will just show you 3 of them which are :\r\n                        <ol>\r\n                            <li>Merge sort</li>\r\n                            <li>Quick sort</li>\r\n                            <li>Bubble sort</li>\r\n                        </ol>\r\n                        they are all different but bubble sort is the slowest out of the three. so enjoy the visualisationn and judge for yourself.\r\n                    </div>\r\n                </main>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Introduction\r\n","import './App.css';\n// import { useContext } from 'react';\nimport Navbar from './components/Navbar';\nimport Canvas from './components/Canvas';\nimport Introduction from './components/Introduction';\n// import {MyContext} from './components/ContextApi'\n\nfunction App() {\n  // const name = useContext(MyContext)\n  // console.log('amosssss ',name)\n  return (\n      <div className=\"App\">\n        <Navbar/>\n        <Introduction/>\n        <Canvas/>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ContextApi from './components/ContextApi';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextApi>\n        <App />\n    </ContextApi>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}